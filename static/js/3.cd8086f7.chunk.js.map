{"version":3,"sources":["redux/selectors/authSelectors.js","redux/selectors/dialogsSelectors.js","components/Dialogs/DialogItem.tsx","components/Dialogs/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["getIsAuth","state","auth","isAuth","getDialogs","dialogsPage","dialogs","getMessages","messages","getMessageText","newMessageText","DialogItem","props","activeClassName","to","id","className","name","Message","text","AddMessageForm","initialValues","message","onSubmit","values","actions","sendMessage","resetForm","validationSchema","MessageSchema","handleSubmit","render","msg","as","value","onChange","handleChange","type","onClick","Dialogs","dialogsElements","map","dialog","messagesElements","compose","connect","withAuthRedirect"],"mappings":"mJAIaA,EAAY,SAACC,GACzB,OAAOA,EAAMC,KAAKC,QCLNC,EAAa,SAACH,GAC1B,OAAOA,EAAMI,YAAYC,SAGbC,EAAc,SAACN,GAC3B,OAAOA,EAAMI,YAAYG,UAGbC,EAAiB,SAACR,GAC9B,OAAOA,EAAMI,YAAYK,gB,sBCSVC,EAV0B,SAACC,GACvC,OACG,6BACG,cAAC,IAAD,CAASC,gBAAgB,UAAUC,GAAE,mBAAcF,EAAMG,IAAMC,UAAU,gBAAzE,SACIJ,EAAMK,UCNLC,EAJC,SAACN,GACd,OAAO,oBAAII,UAAU,mBAAd,SAAkCJ,EAAMO,Q,gBCiCnCC,EAhCQ,SAACR,GAErB,OACM,cAAC,IAAD,CACGS,cAAe,CACZC,QAAS,IAEZC,SAAU,SAACC,EAAQC,GAChBb,EAAMc,YAAYF,EAAOF,SACzBG,EAAQE,aAEXC,iBAAkBC,IARrB,SAUC,SAAAjB,GAAK,OACH,uBAAMW,SAAUX,EAAMkB,aAAcd,UAAU,6BAA9C,UACG,cAAC,IAAD,CAAcC,KAAK,UAAUc,OAAQ,SAAAC,GAAG,OAAI,qBAAKhB,UAAU,QAAf,SAAwBgB,OACpE,cAAC,IAAD,CACGC,GAAG,WACHC,MAAOtB,EAAMY,OAAOF,QACpBa,SAAUvB,EAAMwB,aAChBnB,KAAK,UACLD,UAAU,2BAEb,wBAAQqB,KAAK,SAASC,QAAS1B,EAAMkB,aAAcd,UAAU,uBAA7D,2ECGAuB,EAtBC,SAAC3B,GAEd,IAAI4B,EAAkB5B,EAAMN,QAAQmC,KAAI,SAACC,GAAD,OACrC,cAAC,EAAD,CAAYzB,KAAMyB,EAAOzB,KAAsBF,GAAI2B,EAAO3B,IAAtB2B,EAAO3B,OAG1C4B,EAAmB/B,EAAMJ,SAASiC,KAAI,SAACnB,GAAD,OACvC,cAAC,EAAD,CAASH,KAAMG,EAAQH,KAAuBJ,GAAIO,EAAQP,IAAxBO,EAAQP,OAI7C,OACG,sBAAKC,UAAU,UAAf,UACG,sBAAKA,UAAU,gBAAf,UACG,oBAAIA,UAAU,iBAAd,SAAgCwB,IAChC,oBAAIxB,UAAU,oBAAd,SAAmC2B,OAEtC,cAAC,EAAD,CAAgBjB,YAAad,EAAMc,kB,wBCR7BkB,sBACZC,aAVqB,SAAC5C,GACtB,MAAO,CACJK,QAASF,EAAWH,GACpBO,SAAUD,EAAYN,GACtBS,eAAgBD,EAAeR,GAC/BE,OAAQH,EAAUC,MAKI,CAAEyB,kBAC3BoB,IAFYF,CAGbL","file":"static/js/3.cd8086f7.chunk.js","sourcesContent":["export const getUser = (state) => {\n\treturn state.auth.user;\n}\n\nexport const getIsAuth = (state) => {\n\treturn state.auth.isAuth;\n}","export const getDialogs = (state) => {\n\treturn state.dialogsPage.dialogs;\n}\n\nexport const getMessages = (state) => {\n\treturn state.dialogsPage.messages;\n}\n\nexport const getMessageText = (state) => {\n\treturn state.dialogsPage.newMessageText;\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface IDialogItem {\n   name: string,\n   id: number\n};\n\nconst DialogItem: React.FC<IDialogItem> = (props) => {\n    return (\n       <li>\n          <NavLink activeClassName=\"_active\" to={`/dialogs/${props.id}`} className=\"dialogs__name\">\n             {props.name}\n          </NavLink>\n       </li>\n    );\n };\n\n export default DialogItem;","import React from 'react';\n\nconst Message = (props) => {\n   return <li className=\"dialogs__message\">{props.text}</li>;\n};\n\nexport default Message;","import React from 'react';\nimport { Formik, ErrorMessage, Field } from 'formik';\nimport { MessageSchema } from '../../models/Models';\n\nconst AddMessageForm = (props) => {\n\n   return (\n         <Formik\n            initialValues={{\n               message: ''\n            }}\n            onSubmit={(values, actions) => {\n               props.sendMessage(values.message);\n               actions.resetForm();\n            }}\n            validationSchema={MessageSchema}\n         >\n         {props =>\n            <form onSubmit={props.handleSubmit} className=\"dialogs__form form-dialogs\">\n               <ErrorMessage name=\"message\" render={msg => <div className=\"error\">{msg}</div>} />\n               <Field\n                  as=\"textarea\"\n                  value={props.values.message}\n                  onChange={props.handleChange}\n                  name=\"message\"\n                  className=\"form-dialogs__textarea\"\n               />\n               <button type=\"submit\" onClick={props.handleSubmit} className=\"form-dialogs__button\">\n                  Отправить\n               </button>\n            </form>\n         }\n         </Formik>\n   );\n};\n\nexport default AddMessageForm;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport DialogItem from './DialogItem';\nimport Message from './Message';\nimport AddMessageForm from './AddMessageForm';\n\n\nconst Dialogs = (props) => {\n\n   let dialogsElements = props.dialogs.map((dialog) => (\n      <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\n   ));\n\n   let messagesElements = props.messages.map((message) => (\n      <Message text={message.text} key={message.id} id={message.id} />\n   ));\n\n\n   return (\n      <div className=\"dialogs\">\n         <div className=\"dialogs__body\">\n            <ul className=\"dialogs__names\">{dialogsElements}</ul>\n            <ul className=\"dialogs__messages\">{messagesElements}</ul>\n         </div>\n         <AddMessageForm sendMessage={props.sendMessage} />\n      </div>\n   );\n};\n\nexport default Dialogs;\n","import { sendMessage } from '../../redux/actions';\nimport { getIsAuth } from '../../redux/selectors/authSelectors';\nimport { getDialogs, getMessages, getMessageText } from '../../redux/selectors/dialogsSelectors';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../hoc';\nimport { compose } from 'redux';\n\nconst mapStateToProps = (state) => {\n   return {\n      dialogs: getDialogs(state),\n      messages: getMessages(state),\n      newMessageText: getMessageText(state),\n      isAuth: getIsAuth(state)\n   }\n}\n\nexport default compose(\n   connect(mapStateToProps, { sendMessage }),\n   withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}
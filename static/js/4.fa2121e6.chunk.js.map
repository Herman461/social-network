{"version":3,"sources":["components/Users/UsersSearch.jsx","components/Users/UsersPaging.jsx","redux/selectors/usersSelectors.js","components/Users/UsersPagingContainer.jsx","components/Users/UsersItem.jsx","components/Users/Users.jsx","api/api.js","components/Users/UsersContainer.jsx","redux/thunks.js"],"names":["UsersSearch","React","memo","props","console","log","action","className","value","searchText","onChange","e","updateUsersSearch","target","filterUsers","placeholder","type","UsersPaging","totalPages","Math","ceil","totalUsersCount","pageSize","pages","i","push","pagesElements","map","page","pageIndex","selectedPage","href","onClick","onPageClick","preventDefault","setSelectedPage","handlePageChangeLeft","handlePageChangeRight","getSearchText","state","usersPage","text","getTotalUsersCount","getFilteredUsers","filteredUsers","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getSelectedPage","getPageSize","getPageNeighbours","pageNeighbours","UsersPagingContainer","this","Component","connect","setUsers","toggleIsFetching","UsersItem","to","user","id","src","ava","alt","username","status","disabled","some","toggleFollowThunkCreator","followed","Users","usersElements","Preloader","instance","axios","baseURL","withCredentials","usersAPI","userId","put","then","response","data","get","UsersComponent","getUsersThunkCreator","UsersContainer","dispatch","items","toggleFollowingProgress","resultCode","toggleFollow"],"mappings":"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","file":"static/js/4.fa2121e6.chunk.js","sourcesContent":["import React from 'react';\n\nconst UsersSearch = React.memo((props) => {\n\tconsole.log('RENDER:');\n   \tconsole.log(props);\n\tconst filterUsers = (e) => {\n\t\tprops.updateUsersSearch(e.target.value);\n\t\tprops.filterUsers();\n\t}\n\treturn (\n\t\t<form action=\"#\" className=\"users__seacrh search-users\">\n\t\t\t<div className=\"search-users__input\">\n\t\t\t\t<input value={props.searchText} className=\"input\" onChange={filterUsers} placeholder=\"Поиск друзей\" type=\"text\" />\n\t\t\t</div>\n\t\t</form>\n\t);\n});\n\n\nexport default UsersSearch;","import React from 'react';\nimport * as axios from \"axios\";\n\nconst UsersPaging = (props) => {\n\t// const range = (from, to, step = 1) => {\n\t// \tlet i = from;\n\t// \tconst range = [];\n\n\t// \twhile (i <= to) {\n\t// \t\trange.push(i);\n\t// \t\ti += step;\n\t// \t}\n\t// \treturn range;\n\t// }\n\t// const fetchPageNumbers = () => {\n\t// \tconst totalPages = Math.ceil(props.totalUsersCount / props.pageSize);\n\t// \tconst totalNumbers = (props.pageNeighbours * 2) + 3;\n\t// \tconst totalBlock = totalNumbers + 2;\n\t\t\n\t// \tif (totalPages > totalBlock) {\n\t// \t\tconst startPage = Math.max(2, props.selectedPage - pageNeighbours);\n\t// \t\tconst endPage = Math.min(totalPages - 1, props.selectedPage + pageNeighbours);\n\t// \t\tlet pages = range(startPage, endPage);\n\n\t// \t\tconst hasLeftSpill = startPage > 2;\n\t// \t\tconst hasRightSpill = (props.totalUsersCount - endPage) > 1;\n\t// \t\tconst spillOffset = totalNumbers - (pages.length + 1);\n\t// \t}\n\t// }\n\tconst handlePageChangeLeft = (e) => {\n\t\te.preventDefault();\n\t\tif (props.selectedPage > 1) {\n\t\t\tprops.setSelectedPage(props.selectedPage - 1)\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t\t\n\t}\n\n\tconst handlePageChangeRight = (e) => {\n\t\te.preventDefault();\n\t\t// if (props.selectedPage < 1) //! Доделать стрелку-переключатель на следующий элемент, сделать так, чтобы не выходило за пределы максимального значения\n\t\tprops.setSelectedPage(props.selectedPage + 1)\n\t}\n\n\n\tlet totalPages = Math.ceil(props.totalUsersCount / props.pageSize);\n\tlet pages = [];\n\n\tfor (let i = 1; i <= totalPages; i++) {\n\t\tpages.push(i);\n\t}\n\n\tlet pagesElements = pages.map((page, pageIndex) => {\n\t\tif (props.totalUsersCount - 7 < props.selectedPage) {\n\t\t\tif (props.totalUsersCount - 8 > pageIndex) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn page === props.selectedPage + 7 ? \n\t\t\t\t\t<li><a href=\"\" className=\"paging__item\">...</a></li> :  \n\t\t\t\t\t<li><a href=\"\"\n\t\t\t\t\t\tonClick={(e) => props.onPageClick(e, page)}\n\t\t\t\t\t\tclassName={`paging__item${page === props.selectedPage ? \" _active\" : \"\"}`}>{page}</a></li>\n\t\t\t}\n\t\t}\t\n\t\telse {\n\t\t\tif (props.selectedPage + 6 < pageIndex || props.selectedPage - 2 > pageIndex) {\n\t\t\t\treturn null;\t\n\t\t\t} else {\n\t\t\t\treturn page === props.selectedPage + 7 ? \n\t\t\t\t\t<li><a href=\"\" className=\"paging__item\">...</a></li> :  \n\t\t\t\t\t<li><a href=\"\"\n\t\t\t\t\t\tonClick={(e) => props.onPageClick(e, page)}\n\t\t\t\t\t\tclassName={`paging__item${page === props.selectedPage ? \" _active\" : \"\"}`}>{page}</a></li>\n\t\t\t}\n\t\t}\n\t})\n\n\treturn (\n\t\t<div className=\"users__pages\">\n\t\t\t<div className=\"paging\">\n\t\t\t\t<a href=\"\" \tonClick={(e) => handlePageChangeLeft(e)} className=\"paging__arrow paging__arrow_previous\"></a>\n\t\t\t\t<ul className=\"paging__list\">\n\t\t\t\t\t{pagesElements}\n\t\t\t\t</ul>\n\t\t\t\t<a href=\"\" onClick={(e) => handlePageChangeRight(e)} className=\"paging__arrow paging__arrow_next\"></a>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default UsersPaging;","export const getSearchText = (state) => {\n\treturn state.usersPage.text;\n}\n\nexport const getTotalUsersCount = (state) => {\n\treturn state.usersPage.totalUsersCount;\n}\n\nexport const getFilteredUsers = (state) => {\n\treturn state.usersPage.filteredUsers;\n}\n\nexport const getIsFetching = (state) => {\n\treturn state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state) => {\n\treturn state.usersPage.followingInProgress;\n}\n\nexport const getSelectedPage = (state) => {\n\treturn state.usersPage.selectedPage;\n}\n\nexport const getPageSize = (state) => {\n\treturn state.usersPage.pageSize;\n}\n\nexport const getPageNeighbours = (state) => {\n\treturn state.usersPage.pageNeighbours;\n}\n","import React from 'react';\nimport * as axios from \"axios\";\nimport UsersPaging from './UsersPaging';\nimport { connect } from 'react-redux';\nimport { setSelectedPage, setUsers, toggleIsFetching } from '../../redux/actions';\nimport { getSelectedPage, getTotalUsersCount,\n\tgetPageSize, getPageNeighbours } from '../../redux/selectors/usersSelectors';\n\nclass UsersPagingContainer extends React.Component {\n\tonPageClick = (e, page) => {\n\t\t// e.preventDefault();\n\t\t// this.props.toggleIsFetching();\n\t\t// getPages(this.props.pageSize, page).then(data => {\n\t\t// \tthis.props.toggleIsFetching();\n\t\t// \tthis.props.setUsers(data.items);\n\t\t// })\n\t\t// this.props.setSelectedPage(page);\n\t}\n\n\trender() {\n\t\treturn <UsersPaging\n\t\t\tselectedPage={this.props.selectedPage}\n\t\t\ttotalUsersCount={this.props.totalUsersCount}\n\t\t\tpageSize={this.props.pageSize}\n\t\t\tsetSelectedPage={this.props.setSelectedPage}\n\t\t\tonPageClick={this.onPageClick}\n\t\t\tpageNeighbours={this.props.pageNeighbours}\n\t\t />\n\t}\n\n}\n\nconst mapStateToProps = (state) => ({\n\tselectedPage: getSelectedPage(state),\n\ttotalUsersCount: getTotalUsersCount(state),\n\tpageSize: getPageSize(state),\n\tpageNeighbours: getPageNeighbours(state)\n})\n\nexport default connect(mapStateToProps, \n{setSelectedPage, setUsers, toggleIsFetching})(UsersPagingContainer);","import React from 'react';\nimport ava from '../../assets/img/ava.jpg';\nimport { NavLink } from 'react-router-dom';\n\nconst UsersItem = (props) => {\n\treturn (\n\t\t<li className=\"users__item item-users\">\n\t\t\t<div className=\"item-users__body\">\n\t\t\t\t<NavLink to={\"/profile/\" + props.user.id} className=\"item-users__ava\">\n\t\t\t\t\t<img src={props.user.ava ? props.user.ava : ava} alt=\"\" />\n\t\t\t\t</NavLink>\n\t\t\t\t<div className=\"item-users__content\">\n\t\t\t\t\t<div className=\"item-users__info info-users\">\n\t\t\t\t\t\t<div className=\"info-users__name\">{props.user.username}</div>\n\t\t\t\t\t\t<div className=\"info-users__status\">{props.user.status}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tclassName=\"item-users__button\"\n\t\t\t\tdisabled={props.followingInProgress.some(id => props.user.id === id)}\n\t\t\t\tonClick={() => props.toggleFollowThunkCreator(props.user.id, props.user.followed)}\n\t\t\t>\n\t\t\t\t{props.user.followed ? \"В друзьях\" : \"Добавить в друзья\"}\n\t\t\t</button>\n\t\t</li>\n\t);\n};\n\n\nexport default UsersItem;","import React from 'react';\n\nimport UsersSearch from './UsersSearch';\nimport UsersPagingContainer  from './UsersPagingContainer';\nimport UsersItem from './UsersItem';\nimport Preloader from '../common/Preloader';\n\nconst Users = (props) => {\n\tlet usersElements = props.filteredUsers.map(user => (\n\t\t<UsersItem\n\t\t\tkey={user.id}\n\t\t\tuser={user}\n\t\t\ttoggleFollowThunkCreator={props.toggleFollowThunkCreator}\n\t\t\tfollowingInProgress={props.followingInProgress}\n\t\t/>\n\t));\n\t\n\treturn (\n\t\t\n\t\t<div className=\"users\">\n\t\t\t<div className=\"users__title\">Users</div>\n\t\t\t<UsersPagingContainer />\n\t\t\t<UsersSearch \n\t\t\t\tfilterUsers={props.filterUsers}\n\t\t\t\tupdateUsersSearch={props.updateUsersSearch}\n\t\t\t\tsearchText={props.searchText}\n\t\t\t/>\n\t\t\t{props.isFetching ? <Preloader />\n\t\t\t: \t<ul className=\"users__items\">\n\t\t\t\t\t{usersElements}\n\t\t\t\t</ul>\n\t\t\t}\n\n\t\t</div>\n\t);\n};\n\nexport default Users;","import * as axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: \"http://localhost:4000/\",\n\twithCredentials: true\n});\n\n\nexport const usersAPI = {\n\ttoggleFollow(userId, followed) {\n\t\treturn instance.put('api/follow/' + userId, { followed: !followed }).then(response => response.data);\n\t},\n\tgetUsers() {\n\t\treturn instance.get(\"api/users\").then(response => response.data);\n\t},\n\tgetUserProfile(userId) {\n\t\treturn instance.get('api/profile').then(response => response.data);\n\t},\n\tgetPages(pageSize, page) {\n\t\treturn instance.get(`users?page=${page}&count=${pageSize}`).then(response => response.data);\n\t},\n\tgetStatus(status) {\n\t\treturn instance.put('api/profile/status', { status }).then(response => response.data);\n\t}\n};\n\nexport const authAPI = {\n\tgetAuth() {\n\t\treturn instance.get('api/auth/me').then(response => response.data);\n\t},\n\tlogin(username, password) {\n\t\treturn instance.post('api/auth/login', { username, password }).then(response => response.data);\n\t},\n\tlogout() {\n\t\treturn instance.delete('api/auth/login').then(response => response.data);\n\t},\n\tregister(username, password) {\n\t\treturn instance.post('api/register', { username, password }).then(response => response.data);\n\t}\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\n\nimport Users from './Users';\nimport { getSearchText, getTotalUsersCount, getFilteredUsers, \n\tgetIsFetching, getFollowingInProgress} from '../../redux/selectors/usersSelectors';\nimport { getUsersThunkCreator, toggleFollowThunkCreator } from '../../redux/thunks';\nimport {\n\tfilterUsers, \n\tupdateUsersSearch,\n\tsetSelectedPage\n} from '../../redux/actions';\n\n\n\nclass UsersComponent extends React.Component {\n\tcomponentDidMount() {\t\n\t\tthis.props.getUsersThunkCreator();\n\t\t// axios.post('http://localhost:4000/api/register', { username: \"Hdadlasdsdsdasasan\", password: \"123\" }).then(response => {\n\t\t// \tdebugger;\n\t\t// })\n\t}\n\n\trender() {\n\t\treturn <Users {...this.props} />;\n\t} \n\n};\n\n\nconst mapStateToProps = (state) => ({\n\tsearchText: getSearchText(state),\n\ttotalUsersCount: getTotalUsersCount(state),\n\tfilteredUsers: getFilteredUsers(state),\n\tisFetching: getIsFetching(state),\n\tfollowingInProgress: getFollowingInProgress(state)\n});\n\nconst UsersContainer = connect(mapStateToProps,\n{ filterUsers, updateUsersSearch, getUsersThunkCreator, toggleFollowThunkCreator })(UsersComponent);\n\nexport default UsersContainer;","import * as axios from 'axios';\nimport { \n\ttoggleIsFetching, setUsers, setTotalUsersCount,\n\ttoggleFollowingProgress, toggleFollow, \n\tsetAuthUserData, setMessage, initializedSuccess} from './actions';\nimport { setUserProfile, updateStatus } from './actions/profileActions';\nimport { usersAPI, authAPI } from '../api/api';\n\nexport const getUsersThunkCreator = () => (dispatch) => {\n\tdispatch(toggleIsFetching());\n\tusersAPI.getUsers().then(data => {\n\t\tdispatch(toggleIsFetching());\n\t\tdispatch(setUsers(data.items));\n\t\t// dispatch(setTotalUsersCount(data.totalCount));\n\t});\n};\n\nexport const toggleFollowThunkCreator = (userId, followed) => (dispatch) => {\n\tdispatch(toggleFollowingProgress(true, userId));\n\tusersAPI.toggleFollow(userId, followed)\n\t.then(data => {\n\t\tdispatch(toggleFollowingProgress(false, userId));\n\t \tif (data.resultCode === 0) {\n\t\t\tdispatch(toggleFollow(userId));\n\t\t }\t\n\t});\t\n};\n\n// export const getProfileThunkCreator = (userId) => (dispatch) => {\n// \tusersAPI.getUserProfile().then(data => {\n// \t\tdispatch(setUserProfile(data.profile));\n// \t});\n// };\n\n// export const updateStatusThunkCreator = (status) => (dispatch) => {\n// \tusersAPI.getStatus(status).then(data => {\n// \t\tdispatch(updateStatus(data.status))\n// \t});\n// }\n\n\n// export const authThunkCreator = () => (dispatch) => {\n// \treturn authAPI.getAuth().then(data => {\n// \t\tif (data.resultCode === 0) {\n// \t\t\tdebugger;\n// \t\t\tdispatch(setAuthUserData(data.user, true));\n// \t\t}\n// \t});\n// }\n\n// export const loginThunkCreator = (username, password) => (dispatch) => {\n\n// \tauthAPI.login(username, password).then(data => {\n// \t\tif (data.resultCode === 0) {\n// \t\t\tdispatch(setAuthUserData(data.user, true));\n// \t\t} else {\n// \t\t\tdispatch(setMessage(data.message))\n// \t\t}\n// \t});\n// }\n\n// export const registerThunkCreator = (username, password) => (dispatch) => {\n// \tauthAPI.register(username, password).then(data => {\n// \t\tif (data.resultCode === 0) {\n// \t\t\tdispatch(setAuthUserData(data.user, true));\n// \t\t}\n// \t});\n// }\n\n// export const logoutThunkCreator = (username, password) => (dispatch) => {\n// \tauthAPI.logout(username, password).then(data => {\n// \t\tif (data.resultCode === 0) {\n// \t\t\tdispatch(setAuthUserData(null, false));\n// \t\t}\n// \t});\n// }\n\n// export const initializeApp = () => (dispatch) => {\n// \tdispatch(authThunkCreator()).then(() => dispatch(initializedSuccess()))\n// }\n\n"],"sourceRoot":""}